basePath: /api
definitions:
  controller.healthResponse:
    properties:
      status:
        type: string
      user:
        type: string
    type: object
  domain.Audio:
    properties:
      description:
        type: string
      name:
        type: string
      path:
        type: string
      uuid:
        type: string
    type: object
  dto.AudioDeletePayload:
    properties:
      uuid:
        type: string
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
    type: object
  dto.UserLoginPayload:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.UserRegisterPayload:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.UserResponse:
    properties:
      email:
        type: string
      role:
        type: string
      uuid:
        type: string
    type: object
host: meditationbe.onrender.com
info:
  contact: {}
  description: Meditation API spec
  title: Meditation API
  version: 0.0.1
paths:
  /audio/{uuid}:
    get:
      parameters:
      - description: UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Audio'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerToken: []
      summary: GetAudio
      tags:
      - audio
  /audio/delete:
    delete:
      parameters:
      - description: Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AudioDeletePayload'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerToken: []
      summary: DeleteAudio
      tags:
      - audio
  /audio/list:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Audio'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerToken: []
      summary: GetAudioList
      tags:
      - audio
  /audio/update:
    post:
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/domain.Audio'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerToken: []
      summary: UpdateAudio
      tags:
      - audio
  /audio/upload:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: Audio file
        in: formData
        name: file
        required: true
        type: file
      - in: formData
        name: description
        type: string
      - in: formData
        name: name
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerToken: []
      summary: UploadAudio
      tags:
      - audio
  /health:
    get:
      description: get API status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.healthResponse'
      summary: API ststus
      tags:
      - health
  /login:
    post:
      parameters:
      - description: Login user
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Login
      tags:
      - user
  /me:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - BearerToken: []
      summary: GetUser
      tags:
      - user
  /register:
    post:
      parameters:
      - description: Register user
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegisterPayload'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Register
      tags:
      - user
securityDefinitions:
  BearerToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
